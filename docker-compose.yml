version: '3.8'

services:
  # PostgreSQL database
  postgres:
    image: postgres:16
    container_name: veille-postgres
    environment:
      POSTGRES_USER: veille_user
      POSTGRES_PASSWORD: veille_password
      POSTGRES_DB: veille_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - veille-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U veille_user -d veille_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  # NextJS application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: veille-app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://veille_user:veille_password@postgres:5432/veille_db
      - NODE_ENV=production
      - GOOGLE_GENAI_API_KEY=${GOOGLE_GENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - veille-network
  
  # RSS Fetcher Service
  rss-fetcher:
    build:
      context: .
      dockerfile: src/services/rss-fetcher/Dockerfile
    container_name: veille-rss-fetcher
    environment:
      - DATABASE_URL=postgresql://veille_user:veille_password@postgres:5432/veille_db
      - RSS_FETCH_CRON=0 * * * *  # Every hour
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - veille-network

  # AI Summary Service
  ai-summary:
    build:
      context: .
      dockerfile: src/services/ai-summary/Dockerfile
    container_name: veille-ai-summary
    environment:
      - DATABASE_URL=postgresql://veille_user:veille_password@postgres:5432/veille_db
      - GOOGLE_GENAI_API_KEY=${GOOGLE_GENAI_API_KEY}
      - AI_SUMMARY_CRON=0 */3 * * *  # Every 3 hours
      - AI_SUMMARY_BATCH_SIZE=10
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - veille-network

  # Podcast Generator Service
  podcast-generator:
    build:
      context: .
      dockerfile: src/services/podcast-generator/Dockerfile
    container_name: veille-podcast-generator
    environment:
      - DATABASE_URL=postgresql://veille_user:veille_password@postgres:5432/veille_db
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - ELEVENLABS_EN_VOICE_ID=${ELEVENLABS_EN_VOICE_ID}
      - ELEVENLABS_FR_VOICE_ID=${ELEVENLABS_FR_VOICE_ID}
      - PODCAST_GEN_CRON=0 */6 * * *  # Every 6 hours
      - PODCAST_GEN_BATCH_SIZE=5
    volumes:
      - podcast_data:/app/public/podcasts
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - veille-network

volumes:
  postgres_data:
  podcast_data:   # Storage for podcast audio files

networks:
  veille-network:
    driver: bridge
